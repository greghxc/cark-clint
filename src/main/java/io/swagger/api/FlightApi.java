/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ErrorResponse;
import io.swagger.model.Flight;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-08-08T14:54:06.952Z")

@Api(value = "flight", description = "the flight API")
public interface FlightApi {

    @ApiOperation(value = "Get information about a flight", nickname = "getFlight", notes = "", response = Flight.class, tags={ "flight", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Flight.class),
        @ApiResponse(code = 404, message = "Flight not found", response = ErrorResponse.class),
        @ApiResponse(code = 405, message = "Invalid input", response = ErrorResponse.class) })
    @RequestMapping(value = "/flight",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Flight> getFlight(@NotNull @ApiParam(value = "IATA code for airline (e.g. AA, AL)", required = true) @Valid @RequestParam(value = "airline", required = true) String airline,@NotNull @ApiParam(value = "Flight number (e.g. 400)", required = true) @Valid @RequestParam(value = "flightno", required = true) String flightno,@NotNull @ApiParam(value = "Arrival airport (e.g. SEA, SFO)", required = true) @Valid @RequestParam(value = "airport", required = true) String airport,@NotNull @ApiParam(value = "Arrival date ISO8601 in local time (e.g. 20180214)", required = true) @Valid @RequestParam(value = "date", required = true) String date);

}
